from selenium import webdriver
from selenium.webdriver.chrome.options import Options
import time
import os
from config import CHROME_USER_DATA_DIR
from scraper.login import is_logged_in, do_login, select_character, click_enter_game_if_exists
from scraper.market import go_to_market
from scraper.utils import reset_index
from db.handler import create_table, clear_data
from export_data.export import export_to_json


def main():
    total_start = time.time()

    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
    options = Options()
    profile_path = os.path.abspath(CHROME_USER_DATA_DIR)
    options.add_argument("--headless")  # ‡∏ã‡πà‡∏≠‡∏ô browser
    options.add_argument(f"--user-data-dir={profile_path}")
    options.add_argument("--window-size=1920,1080") 

    driver = webdriver.Chrome(options=options)

    # Reset index
    t = time.time()
    reset_index()
    print(f"üßπ Reset index ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time.time() - t:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

    # Login
    t = time.time()
    if is_logged_in(driver):
        print("‚úÖ Login ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
        click_enter_game_if_exists(driver)
    else:
        print("üîê ‡∏Å‡∏≥‡∏•‡∏±‡∏á login ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        do_login(driver)
    print(f"üîë ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time.time() - t:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
    t = time.time()
    select_character(driver)
    print(f"üßô ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time.time() - t:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

    # ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    t = time.time()
    clear_data()
    create_table()
    print(f"üóÉÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time.time() - t:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

    # ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Marketplace ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    t = time.time()
    go_to_market(driver)
    print(f"üõí ‡πÄ‡∏Ç‡πâ‡∏≤ Marketplace ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time.time() - t:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

    # ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
    t = time.time()
    driver.quit()
    print(f"üõë ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time.time() - t:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

    #‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å database ‡πÄ‡∏õ‡πá‡∏ô json
    t = time.time()
    export_to_json()
    print(f"üõë ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å database ‡πÄ‡∏õ‡πá‡∏ô json ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {time.time() - t:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
    total_end = time.time()
    print(f"\n‚è±Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_end - total_start:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

if __name__ == "__main__":
    main()
